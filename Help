pasta: commands/ login.commands

        export interface  LoginCommand {
            usuario: string;
            senha: string;

        }
pasta: login/ login.component.html

        <form [formGroup]="formulario" (ngSubmit)="autenticar()">
          <header>
            Autenticação
          </header>
          <div class="form-group">
            <div class="col-md-4">
              <label for="usuario">Usuário</label>
            </div>
            <div class="col-md-4">
              <input type="text" class="form-control" formControlName="usuario" placeholder="Usuario" required>
            </div>
            <div *ngIf="!formulario.controls.usuario.valid">
              (*)obrigatório
            </div>
          </div>
          <div class="form-group">
            <div class="col-md-4">
              <label for="senha">Senha</label>
            </div>
            <div class="col-md-4">
              <input type="password" class="form-control" formControlName="senha" placeholder="Senha" required>
            </div>
            <div *ngIf="!formulario.controls.senha.valid">
              (*)obrigatório
            </div>
          </div>

          <button type="submit" class="btn btn-primary">Logar</button>
        </form>
login.component.ts

    import { Component, OnInit } from '@angular/core';
    import { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';
    import { AutenticacaoService } from '../services/autenticacao.service';
    import { LoginCommand } from '../commands/login.command';

    @Component({
      selector: 'app-login',
      templateUrl: './login.component.html',
      styleUrls: ['./login.component.css'],
      providers: [AutenticacaoService]
    })
    export class LoginComponent implements OnInit {

      formulario: FormGroup;

      constructor(private fb: FormBuilder, private autenticacaoService: AutenticacaoService
      ) { }

      ngOnInit() {
        this.criandoFormulario();
      }

      criandoFormulario() {
        this.formulario = this.fb.group({
          usuario: ['', Validators.required],
          senha: ['', Validators.required],
        })
      }

      autenticar() {
        if (this.formulario.valid) {
          let params: LoginCommand = {
            usuario: this.formulario.value.usuario,
            senha: this.formulario.value.senha
          }
          this.autenticacaoService.autenticar(params)
            .subscribe(
              (data: any) => {
                console.log(data.result);
              },
              err => {
                console.log(err);
              }
            );

        }
      }
    }
pasta: services/autenticacao.services.ts

  import { Injectable } from '@angular/core';
  import { HttpClient, HttpHeaders } from '@angular/common/http';
  import { Observable } from 'rxjs/Observable';
  import { LoginCommand } from './../commands/login.command';
  import 'rxjs/add/operator/map'
  import { RequestOptions } from '@angular/http';

  const httpOptions = {
    headers: new HttpHeaders({ 'Content-Type': 'application/json' })
  };

  @Injectable()
  export class AutenticacaoService {

    private baseUrl: string = 'http://localhost:10428/v1/'
    constructor(private http: HttpClient) {

    }

    public autenticar(loginCommand: LoginCommand): Observable<string> {      
      return this.http.post<string>(`${this.baseUrl}autenticar`, loginCommand);
    }
  }
app.component.html

<router-outlet></router-outlet>
app.module.ts

      import { BrowserModule } from '@angular/platform-browser';
      import { NgModule } from '@angular/core';
      import { FormsModule, ReactiveFormsModule } from '@angular/forms';
      import { HttpModule } from '@angular/http';
      import { HttpClientModule } from '@angular/common/http';

      import { routing } from './app.routing';
      import { AppComponent } from './app.component';
      import { LoginComponent } from './login/login.component';

      @NgModule({
        declarations: [
          AppComponent,
          LoginComponent
        ],
        imports: [
          BrowserModule,
          FormsModule,
          ReactiveFormsModule,
          HttpClientModule,
          HttpModule,
          routing
        ],
        providers: [],
        bootstrap: [AppComponent]
      })
      export class AppModule { }

  --------------------------------------------------------------------------------------------------------------------------------
  app.routing.ts
  import { ModuleWithProviders } from '@angular/core';
  
  import { Routes, RouterModule } from '@angular/router';

  import { AppComponent } from './app.component';
  import { LoginComponent } from './login/login.component';

      const APP_ROUTES: Routes = [
          { path: '', component: AppComponent },
          { path: 'login', component: LoginComponent },
      ]

     export const routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);
